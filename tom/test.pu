@startuml seq
    skinparam backgroundColor #EEEBDC
    skinparam handwritten false
    actor User
    boundary foo1
    control foo2
    entity foo3
    database foo4
    collections picks

    User -> "reqTag()" : enter hashtag
    "login()" -> Customer : session token
    activate "login()"
    Customer -> "placeOrder()" : session token, order info
    actor Agent
@enduml

@startuml
object "inbound message" as m1
object "XML Splitter" as s1

' m1 : <img:redis.png{scale=1}>
' a2 : <img:$a>

' m2 : <img:>




' s1 : <img:redisjson.png{scale=0.65}>
m2 : <img:redisgear.png{scale=0.55}>

m3 -> s2
s2 -> s3
@enduml

@startuml :activity;
skinparam component {
    BorderColor none
    BackgroundColor none
    Shadowing false
}

skinparam rectangle {
    BorderColor none
    BackgroundColor none
    Shadowing false
}

skinparam activity {
    BackgroundColor transparent
    BorderColor transparent
    Shadowing none
}

skinparam {
    ActivityDiamondBorderColor transparent
    ActivityDiamondBackgroundColor transparent
    Shadowing false
    DefaultTextAlignment center

}
skinparam BorderColor none
' !define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.1.0
' !includeurl ICONURL/common.puml
' !includeurl ICONURL/devicons/mysql.puml
' !includeurl ICONURL/devicons/redis.puml 
' !includeurl ICONURL/font-awesome-5/database.puml
' !includeurl ICONURL/font-awesome-5/sort_amount_up.puml
' !includeurl ICONURL/font-awesome-5/sort_amount_down.puml
' !includeurl ICONURL/font-awesome-5/sort.puml
' !includeurl ICONURL/material/queue.puml

!include <tupadr3/common>
!include <tupadr3/material/queue>


!$gears = '<img:https://user-images.githubusercontent.com/28928495/71313236-d1c99a00-242d-11ea-9472-3e72aefe198b.png{scale=0.20}>'
!$gear = '<img:https://user-images.githubusercontent.com/28928495/71313216-80b9a600-242d-11ea-8ed1-332511860c8c.png{scale=0.15}>'
!$redis = '<img:https://user-images.githubusercontent.com/28928495/71313246-fde51b00-242d-11ea-8c0f-e2d771c26315.png{scale=0.3}>'
!$stream = '<img:https://user-images.githubusercontent.com/28928495/71313279-43a1e380-242e-11ea-9f7c-873b8788893b.png{scale=0.10}>'
!$TS = '<img:https://user-images.githubusercontent.com/28928495/71313314-cd51b100-242e-11ea-9ceb-a50b6464a398.png{scale=0.15}>'
!$json = '<img:https://user-images.githubusercontent.com/28928495/71312690-9c20b300-2425-11ea-8606-300a95b4e3ac.png{scale=0.20}>'
!$bloom = '<img:https://user-images.githubusercontent.com/28928495/71313199-418b5500-242d-11ea-9dfc-b3fd6252111e.png{scale=0.40}>'
!$graph = '<img:https://user-images.githubusercontent.com/28928495/71320280-f14dda80-24a0-11ea-9aa5-105b915010a4.png{scale=0.30}>'
!$search = '<img:https://user-images.githubusercontent.com/28928495/71320310-63beba80-24a1-11ea-9d7b-85823a59e2f9.png{scale=0.20}>'
!$reddisk = '<img:https://user-images.githubusercontent.com/28928495/71320331-c021da00-24a1-11ea-9034-296325036749.png{scale=0.20}>'
!$redisblack = '<img:https://user-images.githubusercontent.com/28928495/71323736-7ac7d180-24ce-11ea-8aa8-70f159a88d06.png{scale=0.05}>'
' DEV_REDIS(redis)
' FA5_SORT(alias)
' FA5_SORT_AMOUNT_UP(alis)
' FA5_SORT_AMOUNT_DOWN(b)

' User Enter Hashtag
' Redirect user to website/tags/$hashtag
' LPUSH tag
' If tag exists then getNewPosts()
' Else addNewTag()
' 

MATERIAL_QUEUE(a1, LPUSH)
note right: Enter hashtag

MATERIAL_QUEUE(a2, LPOP)
[$redisblack] as asd
a1 <--> asd
a2 <-- asd

' $redisblack

' e;
' -> You can put text in arrows;
' if ($stream) then
'     -[#blue]->
'     :foo2;
'     -[#green,dashed]-> The text can
'     also be on several lines
'     and **very** long...;
'     :foo3;
' else
'     -[#black,dotted]->
'     :foo4;
' endif
' -[#gray,bold]->
' :foo5;


@enduml

@startuml
' PlantUML stdlib now includes Icon-Font Sprites! See https://github.com/tupadr3/plantuml-icon-font-sprites

!include <tupadr3/common>
!include <tupadr3/font-awesome/server>
!include <tupadr3/font-awesome/database>
!include <tupadr3/material/queue>

title Styling example

FA_SERVER(web1,web1) #Green
FA_SERVER(web2,web2) #Yellow
FA_SERVER(web3,web3) #Blue
FA_SERVER(web4,web4) #YellowGreen

FA_DATABASE(db1,LIVE,database,white) #RoyalBlue
FA_DATABASE(db2,SPARE,database) #Red


MATERIAL_QUEUE(q1,queue1)

db1 <--> db2

web1 <--> db1
web2 <--> db1
web3 <--> db1
web4 <--> db1
@enduml

@startuml :activty;
!$ab = "fook"
!$img1 = "https://d1ngwfo98ojxvt.cloudfront.net/images/blog/redis/config/config.png"
(*) --> "Initialization"
if $ab then
    -->[true] "Some Activity"
    --> "Another activty"
    -right-> (*)
else
    ->[false] "Something else"
    -->[Ending process] (*)
endif
@enduml

@startuml
:Website;
:submit hashtag **lines**;
@enduml

@startuml
:Start;
if (Tag exsists?) then (yes)
    :process all;
else (no)
    :process only
    __sequence__ and __activity__ diagrams;
endif
stop
@enduml

@startuml
start
if (condition A) then (yes)
    :Text 1;
elseif (condition B) then (yes)
    :Text 2;
    stop
elseif (condition C) then (yes)
    :Text 3;
elseif (Condition D) then (yes)
    :Text 4;
else (nothing)
    :Text else;
endif
stop
@enduml


@startuml
start
repeat
    :read data;
    :generate diagrams;
repeat while (more data?) is (yes)
->no;
stop

@enduml

@startuml
start
while (data available?)
    :read data;
    :generate diagrams;
endwhile
stop
@enduml

@startuml
while (check filesize ?) is (not empty)
    :read file;
endwhile (empty)
:close file;

@enduml

@startuml
start
if (multiprocessor?) then (yes)
 fork
    :Treatment 1;
 fork again
    :Treatment 1;
 end fork
else (monoproc)
    :Treatment 1;
    :Treatment 2;
endif
@enduml

@startuml
:fool;
-> You can put text in arrows;
if (test) then
    -[#blue]->
    :foo2;
    -[#green,dashed]-> The text can
    also be on several lines
    and **very** long...;
    :foo3;
else
    -[#black,dotted]->
    :foo4;
endif
-[#gray,bold]->
:foo5;
@enduml

@startuml

start
:ClickServlet.handleRequest();
:new page;
if (Page.onSecurityCheck) then (true)
    :Page.onInit();
    if (isForward?) then (no)
        :Process controls;
        if (continue processing?) then (no)
            stop
        endif
        if (isPost?) then (yes)
            :Page.onPost();
        else (no)
            :Page.onGet();
        endif
            :page.onRender();
    endif
else (false)
endif

if (do redirecty?) then (yes)
    :redirect process;
else
    if (do forward?) then (yes)
        :Forward request;
    else (no)
        :Render page template;
    endif
endif
stop
@enduml

@startuml
package "Some Group" {
    <img:redis.png>
    HTTP - [First Component]
    [Another Component]
}
node "Other groups" {
    FTP - [Second Component]
    [First Component] --> FTP
}

cloud {
    [Example 1]
}

database "MySql" {
    folder "This is my folder" {
        [Folder 3]
    }
    frame "Foo" {
        [Frame 4]
    }
}
[Another Component] --> [Example 1]
[Example 1] --> [Folder 3]
[Folder 3] --> [Frame 4]
@enduml

' Changing arrows direction
@startuml
[Component] --> Interface1
[Component] -> Interface2
@enduml

@startuml
[Component] --> Interface1
Inteface2 -> [Component]
[Component] -left-> left
@enduml
